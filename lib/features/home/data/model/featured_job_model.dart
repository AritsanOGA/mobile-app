import 'package:artisan_oga/features/home/domain/entities/featured_job_entity.dart';

class FeaturedJobResponseModel extends FeaturedJobResponseEntity {
  FeaturedJobResponseModel({
    super.id,
    super.invoiceId,
    super.recruiterId,
    super.closed,
    super.identity,
    super.status,
    super.featured,
    super.compensationType,
    super.paymentId,
    super.paymentMethod,
    super.jobStatus,
    super.userId,
    super.jobTitle,
    super.jobDescription,
    super.url,
    super.firstname,
    super.lastname,
    super.email,
    super.phone,
    super.industry,
    super.position,
    super.hireType,
    super.quantity,
    super.businessCategoryName,
    super.businessCategoryId,
    super.ageRange,
    super.gender,
    super.experience,
    super.levelOfEducation,
    super.itSkills,
    super.basicSalary,
    super.minSalary,
    super.maxSalary,
    super.allowances,
    super.state,
    super.city,
    super.hiredCount,
    super.applicationDeadline,
    super.officeAddress,
    super.accommodationAvailable,
    super.accommodationFor,
    super.createdAt,
    super.updatedAt,
    super.topJobs,
    super.workType,
    super.country,
  });

  factory FeaturedJobResponseModel.fromJson(Map<String, dynamic> json) =>
      FeaturedJobResponseModel(
        id: json["id"],
        invoiceId: json["invoice_id"],
        recruiterId: json["recruiter_id"],
        closed: json["closed"],
        identity: json["identity"],
        status: json["status"],
        featured: json["featured"],
        compensationType: json["compensation_type"],
        paymentId: json["payment_id"],
        paymentMethod: json["payment_method"],
        jobStatus: json["job_status"],
        userId: json["user_id"],
        jobTitle: json["job_title"],
        jobDescription: json["job_description"],
        url: json["url"],
        firstname: json["firstname"],
        lastname: json["lastname"],
        email: json["email"],
        phone: json["phone"],
        industry: json["industry"],
        position: json["position"],
        hireType: json["hire_type"],
        quantity: json["quantity"],
        businessCategoryName: json["business_category_name"],
        businessCategoryId: json["business_category_id"],
        ageRange: json["age_range"],
        gender: json["gender"],
        experience: json["experience"],
        levelOfEducation: json["level_of_education"],
        itSkills: json["it_skills"],
        basicSalary: json["basic_salary"],
        minSalary: json["min_salary"],
        maxSalary: json["max_salary"],
        allowances: json["allowances"],
        state: json["state"],
        city: json["city"],
        hiredCount: json["hired_count"],
        applicationDeadline: json["application_deadline"] == null
            ? null
            : DateTime.parse(json["application_deadline"]),
        officeAddress: json["office_address"],
        accommodationAvailable: json["accommodation_available"],
        accommodationFor: json["accommodation_for"],
        createdAt: json["created_at"] == null
            ? null
            : DateTime.parse(json["created_at"]),
        updatedAt: json["updated_at"] == null
            ? null
            : DateTime.parse(json["updated_at"]),
        topJobs: json["top_jobs"],
        workType: json["work_type"],
        country: json["country"],
      );
}
